import logging
import requests
import random
import os
import signal
import asyncio

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters, CallbackQueryHandler

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
my_bot_token = os.environ.get('YOUR_BOT_TOKEN', '')
if not my_bot_token:
    raise ValueError("–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞. –î–æ–±–∞–≤—å—Ç–µ YOUR_BOT_TOKEN –≤ —Å–µ–∫—Ä–µ—Ç—ã.")

# –î–æ–±–∞–≤—å—Ç–µ OPENWEATHER_API_KEY –≤ —Å–µ–∫—Ä–µ—Ç—ã
openweather_api_key = os.environ.get('OPENWEATHER_API_KEY', '')

# Enable logging
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO)
# set higher logging level for httpx to avoid all GET and POST requests being logged
logging.getLogger("httpx").setLevel(logging.WARNING)

logger = logging.getLogger(__name__)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –≤—ã–∑—ã–≤–∞–ª–∏ /start
user_start_history = set()

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_mode_enabled = True

# –°–ø–∏—Å–∫–∏ –º—É–¥—Ä—ã—Ö —Å–æ–≤–µ—Ç–æ–≤ –∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
wise_advices = [
    "–ë—É–¥—å—Ç–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –∑–∞ —Ç–æ, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å. –¶–µ–Ω–∏—Ç–µ —Ç–æ, —á—Ç–æ –∏–º–µ–µ—Ç–µ, –≤–º–µ—Å—Ç–æ —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—Å–µ–≥–¥–∞ —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∫ –±–æ–ª—å—à–µ–º—É.",
    "–ù–µ –±–æ–π—Ç–µ—Å—å –æ—à–∏–±–∞—Ç—å—Å—è. –û—à–∏–±–∫–∏ ‚Äì —ç—Ç–æ —á–∞—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è –∏ —Ä–æ—Å—Ç–∞.",
    "–£—á–∏—Ç–µ—Å—å –Ω–∞ —Å–≤–æ–∏—Ö –æ—à–∏–±–∫–∞—Ö. –ù–µ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ –æ–¥–Ω–∏ –∏ —Ç–µ –∂–µ –æ—à–∏–±–∫–∏ –¥–≤–∞–∂–¥—ã.",
    "–ù–µ –±–æ–π—Ç–µ—Å—å –ø—Ä–æ—Å–∏—Ç—å –æ –ø–æ–º–æ—â–∏. –û–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞ –ø–æ–º–æ—â—å—é ‚Äì –ø—Ä–∏–∑–Ω–∞–∫ —Å–∏–ª—ã, –∞ –Ω–µ —Å–ª–∞–±–æ—Å—Ç–∏.",
    "–í—Å–µ–≥–¥–∞ –±—É–¥—å—Ç–µ —á–µ—Å—Ç–Ω—ã. –ß–µ—Å—Ç–Ω–æ—Å—Ç—å ‚Äì –æ—Å–Ω–æ–≤–∞ –¥–æ–≤–µ—Ä–∏—è –∏ –∫—Ä–µ–ø–∫–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π.",
    "–£–≤–∞–∂–∞–π—Ç–µ —á—É–∂–æ–µ –º–Ω–µ–Ω–∏–µ, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –≤–∞—à–µ–≥–æ.",
    "–ë—É–¥—å—Ç–µ —Ç–µ—Ä–ø–µ–ª–∏–≤—ã. –ù–µ –≤—Å–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å—Ä–∞–∑—É.",
    "–ù–µ —Ç–æ—Ä–æ–ø–∏—Ç–µ—Å—å —Å –≤—ã–≤–æ–¥–∞–º–∏. –î–∞–π—Ç–µ —Å–µ–±–µ –≤—Ä–µ–º—è –æ–±–¥—É–º–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é.",
    "–°–ª—É—à–∞–π—Ç–µ –±–æ–ª—å—à–µ, —á–µ–º –≥–æ–≤–æ—Ä–∏—Ç–µ.",
    "–í–µ—Ä—å—Ç–µ –≤ —Å–µ–±—è. –í–∞—à–∞ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ ‚Äì –≤–∞—à –≥–ª–∞–≤–Ω—ã–π —Å–æ—é–∑–Ω–∏–∫.",
    "–ù–µ —Å—Ä–∞–≤–Ω–∏–≤–∞–π—Ç–µ —Å–µ–±—è —Å –¥—Ä—É–≥–∏–º–∏. –°—Ä–∞–≤–Ω–∏–≤–∞–π—Ç–µ —Å–µ–±—è —Ç–æ–ª—å–∫–æ —Å —Å–æ–±–æ–π –≤—á–µ—Ä–∞—à–Ω–∏–º.",
    "–ë—É–¥—å—Ç–µ –¥–æ–±—Ä—ã. –î–æ–±—Ä–æ—Ç–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –±—É–º–µ—Ä–∞–Ω–≥–æ–º.",
    "–ù–∞—Ö–æ–¥–∏—Ç–µ –≤—Ä–µ–º—è –¥–ª—è —Å–µ–±—è. –ó–∞–±–æ—Ç–∞ –æ —Å–µ–±–µ ‚Äì –∑–∞–ª–æ–≥ –≤–∞—à–µ–≥–æ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è.",
    "–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ —Å–≤–æ–∏—Ö –º–µ—á—Ç–∞—Ö. –ú–µ—á—Ç—ã –ø—Ä–∏–¥–∞—é—Ç —Å–º—ã—Å–ª –∂–∏–∑–Ω–∏.",
    "–ù–µ –±–æ–π—Ç–µ—Å—å –ø–µ—Ä–µ–º–µ–Ω. –ü–µ—Ä–µ–º–µ–Ω—ã ‚Äì —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–ª—è —Ä–æ—Å—Ç–∞."
]

jokes = [
    "–ë–ª–æ–Ω–¥–∏–Ω–∫–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ –∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å:\n‚Äî –£ –º–µ–Ω—è –º–∞—à–∏–Ω–∞ –Ω–µ –∑–∞–≤–æ–¥–∏—Ç—Å—è.\n‚Äî –ê –±–µ–Ω–∑–∏–Ω –µ—Å—Ç—å?\n‚Äî –ö–æ–Ω–µ—á–Ω–æ, –µ—Å—Ç—å! –Ø –¥–∞–∂–µ –ø–æ–ª–±–∞–∫–∞ –∑–∞–ª–∏–ª–∞!",
    "–ú—É–∂ –∑–≤–æ–Ω–∏—Ç –∂–µ–Ω–µ:\n‚Äî –î–æ—Ä–æ–≥–∞—è, —è —Å–µ–≥–æ–¥–Ω—è –∑–∞–¥–µ—Ä–∂—É—Å—å.\n‚Äî –ê —Ç—ã –≥–¥–µ?\n‚Äî –ù–∞ —Ä–∞–±–æ—Ç–µ, –≤ –∫–∞–±–∏–Ω–µ—Ç–µ.\n‚Äî –ê —á—Ç–æ —É —Ç–µ–±—è –∑–∞ —Å–ø–∏–Ω–æ–π?\n‚Äî –°—Ç–µ–Ω–∫–∞.",
    "–£—á–∏—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É—á–µ–Ω–∏–∫–∞:\n‚Äî –ü–æ—á–µ–º—É —Ç—ã –æ–ø–æ–∑–¥–∞–ª?\n‚Äî –£ –º–µ–Ω—è –±—É–¥–∏–ª—å–Ω–∏–∫ —Å–ª–æ–º–∞–ª—Å—è.\n‚Äî –ê –ø–æ—á–µ–º—É —Ç—ã –Ω–µ –ø–æ–ø—Ä–æ—Å–∏–ª –º–∞–º—É —Ç–µ–±—è —Ä–∞–∑–±—É–¥–∏—Ç—å?\n‚Äî –û–Ω–∞ —Ç–æ–∂–µ –æ–ø–∞–∑–¥—ã–≤–∞–ª–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É.",
    "–ù–æ–≤—ã–π —Ä—É—Å—Å–∫–∏–π –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫ –≤—Ä–∞—á—É:\n‚Äî –î–æ–∫—Ç–æ—Ä, —É –º–µ–Ω—è –ø—Ä–æ–±–ª–µ–º–∞. –Ø –Ω–µ –º–æ–≥—É –∑–∞—Å–Ω—É—Ç—å!\n‚Äî –ê —á—Ç–æ –≤—ã –¥–µ–ª–∞–µ—Ç–µ –Ω–∞ –Ω–æ—á—å?\n‚Äî –ù—É, –æ–±—ã—á–Ω–æ —è —Å—á–∏—Ç–∞—é –¥–µ–Ω—å–≥–∏...\n‚Äî –¢–∞–∫ –∏ —Å—á–∏—Ç–∞–π—Ç–µ!\n‚Äî –¢–∞–∫ —è —É–∂–µ –≤–µ—Å—å –¥–µ–Ω—å —Å—á–∏—Ç–∞—é, –∞ –º–Ω–µ –≤—Å–µ –º–∞–ª–æ!",
    "–°–æ–ª–¥–∞—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É —Å–µ—Ä–∂–∞–Ω—Ç–∞:\n‚Äî –¢–æ–≤–∞—Ä–∏—â —Å–µ—Ä–∂–∞–Ω—Ç, –∞ —á—Ç–æ —Ç–∞–∫–æ–µ –º–∞—Ä—à-–±—Ä–æ—Å–æ–∫?\n‚Äî –≠—Ç–æ –∫–æ–≥–¥–∞ –º—ã –±–µ–∂–∏–º, –∞ –≤—ã, –∫–∞–∫ —Ö–æ—Ç–∏—Ç–µ.",
    "–ë–ª–æ–Ω–¥–∏–Ω–∫–∞ –ø–æ–∫—É–ø–∞–µ—Ç –∫–∞—Ä—Ç—É. –ü—Ä–æ–¥–∞–≤–µ—Ü —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç:\n‚Äî –ö—É–¥–∞ –µ—Ö–∞—Ç—å –±—É–¥–µ—Ç–µ?\n‚Äî –ü–æ–∫–∞ –Ω–µ –∑–Ω–∞—é, –Ω–æ —á—Ç–æ–±—ã –º–µ—Å—Ç–æ –±—ã–ª–æ!",
    "–ñ–µ–Ω–∞ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –º—É–∂–∞:\n‚Äî –î–æ—Ä–æ–≥–æ–π, —Ç—ã –º–µ–Ω—è –ª—é–±–∏—à—å?\n‚Äî –ö–æ–Ω–µ—á–Ω–æ, –ª—é–±–ª—é. –¢—ã –∂–µ —É –º–µ–Ω—è —Å–∞–º–∞—è –ª—É—á—à–∞—è!\n‚Äî –ê –µ—Å–ª–∏ —è –ø–æ—Ç–æ–ª—Å—Ç–µ—é?\n‚Äî –ù—É, –∑–Ω–∞—á–∏—Ç, —É –º–µ–Ω—è –±—É–¥–µ—Ç –±–æ–ª—å—à–µ –ª—é–±–∏–º–æ–π –∂–µ–Ω—â–∏–Ω—ã."
]

# –§–∞–∫—Ç—ã –¥–ª—è –∫–æ–º–∞–Ω–¥—ã .–º—É—Ñ–∞–∫—Ç
interesting_facts = [
    "ü¶Ü –£—Ç–∫–∏ –Ω–µ –ø—Ä–æ–º–æ–∫–∞—é—Ç –≤ –≤–æ–¥–µ –±–ª–∞–≥–æ–¥–∞—Ä—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º—É –º–∞—Å–ª—É, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–¥–µ–ª—è—é—Ç –∂–µ–ª–µ–∑—ã —É –æ—Å–Ω–æ–≤–∞–Ω–∏—è —Ö–≤–æ—Å—Ç–∞.",
    "üêô –û—Å—å–º–∏–Ω–æ–≥–∏ –∏–º–µ—é—Ç —Ç—Ä–∏ —Å–µ—Ä–¥—Ü–∞ –∏ –≥–æ–ª—É–±—É—é –∫—Ä–æ–≤—å.",
    "üåç –ó–µ–º–ª—è –≤—Ä–∞—â–∞–µ—Ç—Å—è —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é –ø—Ä–∏–º–µ—Ä–Ω–æ 1670 –∫–º/—á –Ω–∞ —ç–∫–≤–∞—Ç–æ—Ä–µ.",
    "üß† –ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –º–æ–∑–≥ –ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç –æ–∫–æ–ª–æ 20% –≤—Å–µ–π —ç–Ω–µ—Ä–≥–∏–∏ –æ—Ä–≥–∞–Ω–∏–∑–º–∞.",
    "üçØ –ú—ë–¥ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ—Ä—Ç–∏—Ç—Å—è - –∞—Ä—Ö–µ–æ–ª–æ–≥–∏ –Ω–∞—Ö–æ–¥–∏–ª–∏ —Å—ä–µ–¥–æ–±–Ω—ã–π –º—ë–¥ –≤ –µ–≥–∏–ø–µ—Ç—Å–∫–∏—Ö –ø–∏—Ä–∞–º–∏–¥–∞—Ö.",
    "ü¶ã –ë–∞–±–æ—á–∫–∏ —á—É–≤—Å—Ç–≤—É—é—Ç –≤–∫—É—Å –Ω–æ–≥–∞–º–∏.",
    "üêò –°–ª–æ–Ω—ã –±–æ—è—Ç—Å—è –ø—á—ë–ª –∏ –ø—Ä–∏ –∏—Ö –∑–≤—É–∫–µ –º–æ–≥—É—Ç —É–±–µ–∂–∞—Ç—å.",
    "‚ùÑÔ∏è –°–Ω–µ–∂–∏–Ω–∫–∏ –Ω–∞ 90% —Å–æ—Å—Ç–æ—è—Ç –∏–∑ –≤–æ–∑–¥—É—Ö–∞.",
    "üåô –ù–∞ –õ—É–Ω–µ –≤–∞—à –≤–µ—Å –±—ã–ª –±—ã –≤ 6 —Ä–∞–∑ –º–µ–Ω—å—à–µ, —á–µ–º –Ω–∞ –ó–µ–º–ª–µ.",
    "üê® –ö–æ–∞–ª—ã —Å–ø—è—Ç –¥–æ 22 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å."
]

# –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã –¥–ª—è –∫–æ–º–∞–Ω–¥—ã .–º—É—Ü–∏—Ç–∞—Ç–∞
motivational_quotes = [
    "üí™ '–£—Å–ø–µ—Ö - —ç—Ç–æ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∏–¥—Ç–∏ –æ—Ç –Ω–µ—É–¥–∞—á–∏ –∫ –Ω–µ—É–¥–∞—á–µ, –Ω–µ —Ç–µ—Ä—è—è —ç–Ω—Ç—É–∑–∏–∞–∑–º–∞.' - –£–∏–Ω—Å—Ç–æ–Ω –ß–µ—Ä—á–∏–ª–ª—å",
    "üåü '–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–µ–ª–∞—Ç—å –≤–µ–ª–∏–∫—É—é —Ä–∞–±–æ—Ç—É - –ª—é–±–∏—Ç—å —Ç–æ, —á—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å.' - –°—Ç–∏–≤ –î–∂–æ–±—Å",
    "üöÄ '–ë—É–¥—É—â–µ–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —Ç–µ–º, –∫—Ç–æ –≤–µ—Ä–∏—Ç –≤ –∫—Ä–∞—Å–æ—Ç—É —Å–≤–æ–∏—Ö –º–µ—á—Ç–∞–Ω–∏–π.' - –≠–ª–µ–∞–Ω–æ—Ä –†—É–∑–≤–µ–ª—å—Ç",
    "‚≠ê '–ù–µ –∂–¥–∏—Ç–µ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞. –í–æ–∑—å–º–∏—Ç–µ –º–æ–º–µ–Ω—Ç –∏ —Å–¥–µ–ª–∞–π—Ç–µ –µ–≥–æ –∏–¥–µ–∞–ª—å–Ω—ã–º.'",
    "üéØ '–í–∞—à–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ - —ç—Ç–æ —Ç–æ–ª—å–∫–æ –≤–∞—à–µ –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ.'",
    "üíé '–í–µ–ª–∏–∫–∏–µ –¥–µ–ª–∞ —Å–æ–≤–µ—Ä—à–∞—é—Ç—Å—è –Ω–µ —Å–∏–ª–æ–π, –∞ —É–ø–æ—Ä—Å—Ç–≤–æ–º.' - –°—ç–º—é—ç–ª –î–∂–æ–Ω—Å–æ–Ω",
    "üî• '–ü—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è –Ω–µ –¥–æ–ª–∂–Ω—ã –≤–∞—Å –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å. –ï—Å–ª–∏ –≤—ã –Ω–∞—Ç—ã–∫–∞–µ—Ç–µ—Å—å –Ω–∞ —Å—Ç–µ–Ω—É, –Ω–µ –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–π—Ç–µ—Å—å –∏ –Ω–µ —Å–¥–∞–≤–∞–π—Ç–µ—Å—å.' - –ú–∞–π–∫–ª –î–∂–æ—Ä–¥–∞–Ω",
    "üåà '–ñ–∏–∑–Ω—å –Ω–∞ 10% —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Ç–æ–≥–æ, —á—Ç–æ —Å –≤–∞–º–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –∏ –Ω–∞ 90% –∏–∑ —Ç–æ–≥–æ, –∫–∞–∫ –≤—ã –Ω–∞ —ç—Ç–æ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç–µ.'",
    "üí° '–ò–Ω–Ω–æ–≤–∞—Ü–∏—è –æ—Ç–ª–∏—á–∞–µ—Ç –ª–∏–¥–µ—Ä–∞ –æ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è.' - –°—Ç–∏–≤ –î–∂–æ–±—Å",
    "üé™ '–ú–µ—á—Ç–∞–π—Ç–µ —Ç–∞–∫, –∫–∞–∫ –±—É–¥—Ç–æ –±—É–¥–µ—Ç–µ –∂–∏—Ç—å –≤–µ—á–Ω–æ. –ñ–∏–≤–∏—Ç–µ —Ç–∞–∫, –∫–∞–∫ –±—É–¥—Ç–æ —É–º—Ä—ë—Ç–µ —Å–µ–≥–æ–¥–Ω—è.' - –î–∂–µ–π–º—Å –î–∏–Ω"
]

# –ó–∞–≥–∞–¥–∫–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã .–º—É–∑–∞–≥–∞–¥–∫–∞
riddles = [
    {"question": "ü§î –ß—Ç–æ –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å —Å –∑–∞–∫—Ä—ã—Ç—ã–º–∏ –≥–ª–∞–∑–∞–º–∏?", "answer": "–°–æ–Ω"},
    {"question": "ü§î –ß—Ç–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –±–æ–ª—å—à–µ, –µ—Å–ª–∏ –µ–≥–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≤–≤–µ—Ä—Ö –Ω–æ–≥–∞–º–∏?", "answer": "–ß–∏—Å–ª–æ 6"},
    {"question": "ü§î –ß—Ç–æ –≤—Å–µ–≥–¥–∞ –∏–¥—ë—Ç, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç?", "answer": "–ó–∞–≤—Ç—Ä–∞"},
    {"question": "ü§î –£ –º–µ–Ω—è –µ—Å—Ç—å –≥–æ—Ä–æ–¥–∞, –Ω–æ –Ω–µ—Ç –¥–æ–º–æ–≤. –£ –º–µ–Ω—è –µ—Å—Ç—å –≥–æ—Ä—ã, –Ω–æ –Ω–µ—Ç –¥–µ—Ä–µ–≤—å–µ–≤. –£ –º–µ–Ω—è –µ—Å—Ç—å –≤–æ–¥–∞, –Ω–æ –Ω–µ—Ç —Ä—ã–±—ã. –ß—Ç–æ —è?", "answer": "–ö–∞—Ä—Ç–∞"},
    {"question": "ü§î –ß—Ç–æ –º–æ–∂–Ω–æ –ø–æ–π–º–∞—Ç—å, –Ω–æ –Ω–µ–ª—å–∑—è –±—Ä–æ—Å–∏—Ç—å?", "answer": "–ù–∞—Å–º–æ—Ä–∫"},
    {"question": "ü§î –ß–µ–º –±–æ–ª—å—à–µ –∏–∑ –Ω–µ—ë –±–µ—Ä—ë—à—å, —Ç–µ–º –±–æ–ª—å—à–µ –æ–Ω–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è. –ß—Ç–æ —ç—Ç–æ?", "answer": "–Ø–º–∞"},
    {"question": "ü§î –ß—Ç–æ –∏–º–µ–µ—Ç —Ä—É–∫–∏, –Ω–æ –Ω–µ –º–æ–∂–µ—Ç —Ö–ª–æ–ø–∞—Ç—å?", "answer": "–ß–∞—Å—ã"},
    {"question": "ü§î –ß—Ç–æ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è –≤–≤–µ—Ä—Ö, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ–ø—É—Å–∫–∞–µ—Ç—Å—è –≤–Ω–∏–∑?", "answer": "–í–æ–∑—Ä–∞—Å—Ç"},
    {"question": "ü§î –£ –º–µ–Ω—è –µ—Å—Ç—å –∫–ª—é—á–∏, –Ω–æ –Ω–µ—Ç –∑–∞–º–∫–æ–≤. –£ –º–µ–Ω—è –µ—Å—Ç—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –Ω–æ –Ω–µ—Ç –º–µ—Å—Ç–∞. –ß—Ç–æ —è?", "answer": "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞"},
    {"question": "ü§î –ß—Ç–æ –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–µ–¥ –≤–∞–º–∏, –Ω–æ –≤—ã —ç—Ç–æ–≥–æ –Ω–µ –≤–∏–¥–∏—Ç–µ?", "answer": "–ë—É–¥—É—â–µ–µ"}
]

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–≥–∞–¥–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_riddles = {}

# –†–µ–ø–ª–∏–∫–∏ –¥–ª—è –º–∏–Ω–∏-–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–∞—Ö
chat_responses = [
    "–ü—Ä–∏–≤–µ—Ç–∏–∫! –ö–∞–∫ —É —Ç–µ–±—è –¥–µ–ª–∞? üòä",
    "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞-—Ç–æ? üåü",
    "–•–µ–π! –ß—Ç–æ –Ω–æ–≤–æ–≥–æ? üòÑ",
    "–°–∞–ª—é—Ç! –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ? üéâ",
    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! –ö–∞–∫ –ø–æ–∂–∏–≤–∞–µ—à—å? üëã",
    "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç? ü§î",
    "–ü—Ä–∏–≤–µ—Ç–∏–∫–∏! –ö–∞–∫ –∂–∏–∑–Ω—å? üåà",
    "–•–∞–π! –ö–∞–∫ —Å–∞–º? üòé",
    "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞, –¥–æ—Ä–æ–≥–æ–π? üíï",
    "–ó–¥–æ—Ä–æ–≤–æ! –ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞? üöÄ",
    "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ –¥–µ–ª–∞–µ—à—å? ü§ó",
    "–•—ç–π! –ö–∞–∫ –¥–µ–ª–∞ —É —Ç–µ–±—è? üå∏",
    "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç –¥–µ–Ω—å? ‚òÄÔ∏è",
    "–°–∞–ª—é—Ç! –ö–∞–∫ –¥–µ–ª–∞, –¥—Ä—É–≥? ü§ù",
    "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ö–∞–∫ –ø–æ–∂–∏–≤–∞–µ—à—å? üéä",
    "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ –∂–∏–∑–Ω–∏? üìö",
    "–•–∞–π! –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è? üòÉ",
    "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞, –∫—Ä–∞—Å–∞–≤—á–∏–∫? üí™",
    "–ó–¥–æ—Ä–æ–≤–æ! –ß—Ç–æ —É —Ç–µ–±—è –Ω–æ–≤–æ–≥–æ? üéØ",
    "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –ø—Ä–æ—à–µ–ª –¥–µ–Ω—å? üåÖ",
    "–•—ç–π! –ö–∞–∫ –¥–µ–ª–∞, –º–∏–ª—ã–π? üíñ",
    "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ? üé≠",
    "–°–∞–ª—é—Ç! –ö–∞–∫ —Ç–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ? üé™",
    "–ü—Ä–∏–≤–µ—Ç–∏–∫! –ö–∞–∫ –∂–∏–∑–Ω—å –º–æ–ª–æ–¥–∞—è? üå∫",
    "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞, —á–µ–º–ø–∏–æ–Ω? üèÜ",
    "–•–∞–π! –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –∂–∏–∑–Ω–∏? üåç",
    "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞, —Å–æ–ª–Ω—ã—à–∫–æ? ‚òÄÔ∏è",
    "–ó–¥–æ—Ä–æ–≤–æ! –ö–∞–∫ –ø–æ–∂–∏–≤–∞–µ—à—å, –¥—Ä—É–∂–æ–∫? üêª",
    "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ö–∞–∫ –¥–µ–ª–∞ –∏–¥—É—Ç? üé∏",
    "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ –Ω–æ–≤–æ–≥–æ —É–∑–Ω–∞–ª? üîç",
    "–•—ç–π! –ö–∞–∫ –¥–µ–ª–∞, —É–º–Ω–∏—Ü–∞? üß†",
    "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, –∫—Ä–∞—Å–æ—Ç–∫–∞? üíÑ",
    "–°–∞–ª—é—Ç! –ß—Ç–æ —Ö–æ—Ä–æ—à–µ–≥–æ —Å–ª—É—á–∏–ª–æ—Å—å? üçÄ",
    "–ü—Ä–∏–≤–µ—Ç–∏–∫! –ö–∞–∫ –¥–µ–ª–∞, –≥–µ—Ä–æ–π? ü¶∏",
    "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –∂–∏–∑–Ω—å —Ç–µ—á–µ—Ç? üåä",
    "–•–∞–π! –ß—Ç–æ –¥–µ–ª–∞–µ—à—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ? üé®",
    "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞, –∑–≤–µ–∑–¥–∞? ‚≠ê",
    "–ó–¥–æ—Ä–æ–≤–æ! –ö–∞–∫ –ø–æ–∂–∏–≤–∞–µ—à—å, –¥–æ—Ä–æ–≥–æ–π? üíù",
    "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ö–∞–∫ –¥–µ–ª–∞, –∫–∞–ø–∏—Ç–∞–Ω? ‚öì",
    "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ –º–∏—Ä–µ? üåé",
    "–•—ç–π! –ö–∞–∫ –¥–µ–ª–∞, –º–∞—Å—Ç–µ—Ä? üõ†Ô∏è"
]


def check_openweather_status():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å OpenWeather API."""
    try:
        if not openweather_api_key:
            return "–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", "API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        
        # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API —Å –∑–∞–ø—Ä–æ—Å–æ–º –∫ –ú–æ—Å–∫–≤–µ
        moscow_url = f"http://api.openweathermap.org/data/2.5/weather?q=Moscow,RU&appid={openweather_api_key}&units=metric&lang=ru"
        moscow_response = requests.get(moscow_url, timeout=5)
        
        if moscow_response.status_code == 401:
            return "–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", "–Ω–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á"
        elif moscow_response.status_code != 200:
            return "–¥–æ—Å—Ç—É–ø–µ–Ω", "–Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç"
        
        moscow_data = moscow_response.json()
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ú–æ—Å–∫–≤—ã
        if 'main' not in moscow_data or 'temp' not in moscow_data['main']:
            return "–¥–æ—Å—Ç—É–ø–µ–Ω", "–Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç"
        
        # –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥ - –¢–æ–∫–∏–æ
        tokyo_url = f"http://api.openweathermap.org/data/2.5/weather?q=Tokyo,JP&appid={openweather_api_key}&units=metric&lang=ru"
        tokyo_response = requests.get(tokyo_url, timeout=5)
        
        if tokyo_response.status_code != 200:
            return "–¥–æ—Å—Ç—É–ø–µ–Ω", "–Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç"
        
        tokyo_data = tokyo_response.json()
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¢–æ–∫–∏–æ
        if 'main' not in tokyo_data or 'temp' not in tokyo_data['main']:
            return "–¥–æ—Å—Ç—É–ø–µ–Ω", "–Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç"
        
        # –®–∞–≥ 3: –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º–µ–∂–¥—É –ú–æ—Å–∫–≤–æ–π –∏ –¢–æ–∫–∏–æ
        moscow_temp = moscow_data['main']['temp']
        moscow_humidity = moscow_data['main']['humidity']
        moscow_pressure = moscow_data['main']['pressure']
        moscow_weather = moscow_data['weather'][0]['main']
        
        tokyo_temp = tokyo_data['main']['temp']
        tokyo_humidity = tokyo_data['main']['humidity']
        tokyo_pressure = tokyo_data['main']['pressure']
        tokyo_weather = tokyo_data['weather'][0]['main']
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (–∫—Ä–∞–π–Ω–µ –º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ –¥–ª—è —Ç–∞–∫–∏—Ö —É–¥–∞–ª—ë–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤)
        if (moscow_temp == tokyo_temp and 
            moscow_humidity == tokyo_humidity and 
            moscow_pressure == tokyo_pressure and
            moscow_weather == tokyo_weather):
            return "–¥–æ—Å—Ç—É–ø–µ–Ω", "–Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç (–∏–¥–µ–Ω—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)"
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ —Ä–∞–∑–Ω–æ—Å—Ç–∏ —Å–ª–∏—à–∫–æ–º –º–∞–ª—ã –¥–ª—è –≥–æ—Ä–æ–¥–æ–≤ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–∞—Ö
        temp_diff = abs(moscow_temp - tokyo_temp)
        humidity_diff = abs(moscow_humidity - tokyo_humidity)
        pressure_diff = abs(moscow_pressure - tokyo_pressure)
        
        # –î–ª—è –≥–æ—Ä–æ–¥–æ–≤ –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏ ~7000–∫–º –≤ —Ä–∞–∑–Ω—ã—Ö –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–æ–Ω–∞—Ö
        if (temp_diff < 1 and humidity_diff < 5 and pressure_diff < 5):
            return "–¥–æ—Å—Ç—É–ø–µ–Ω", "–Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç (–ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ —Å—Ö–æ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ)"
        
        # –®–∞–≥ 4: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å –ó–µ–ª–µ–Ω–æ–¥–æ–ª—å—Å–∫–æ–º –¥–ª—è –∏—Å—Ö–æ–¥–Ω–æ–π –∑–∞–¥–∞—á–∏
        zelenodolsk_url = f"http://api.openweathermap.org/data/2.5/weather?q=Zelenodolsk,RU&appid={openweather_api_key}&units=metric&lang=ru"
        zelenodolsk_response = requests.get(zelenodolsk_url, timeout=5)
        
        if zelenodolsk_response.status_code == 200:
            zelenodolsk_data = zelenodolsk_response.json()
            if 'main' in zelenodolsk_data:
                zelenodolsk_temp = zelenodolsk_data['main']['temp']
                zelenodolsk_humidity = zelenodolsk_data['main']['humidity'] 
                zelenodolsk_pressure = zelenodolsk_data['main']['pressure']
                
                # –ú–æ—Å–∫–≤–∞ vs –ó–µ–ª–µ–Ω–æ–¥–æ–ª—å—Å–∫
                if (moscow_temp == zelenodolsk_temp and 
                    moscow_humidity == zelenodolsk_humidity and 
                    moscow_pressure == zelenodolsk_pressure):
                    return "–¥–æ—Å—Ç—É–ø–µ–Ω", "–Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç (–ú–æ—Å–∫–≤–∞=–ó–µ–ª–µ–Ω–æ–¥–æ–ª—å—Å–∫)"
        
        return "–¥–æ—Å—Ç—É–ø–µ–Ω", "—Ä–∞–±–æ—Ç–∞–µ—Ç (–¥–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ—Ç–æ—á–Ω—ã–º–∏)"
            
    except requests.exceptions.Timeout:
        return "–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", "—Ç–∞–π–º–∞—É—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"
    except requests.exceptions.RequestException:
        return "–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", "–æ—à–∏–±–∫–∞ —Å–µ—Ç–∏"
    except Exception:
        return "–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"


def get_weather(location):
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–∞."""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –æ—Ç OpenWeather
        if openweather_api_key:
            weather_url = f"http://api.openweathermap.org/data/2.5/weather?q={location}&appid={openweather_api_key}&units=metric&lang=ru"
            response = requests.get(weather_url, timeout=10)

            if response.status_code == 200:
                data = response.json()

                # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ
                temp = round(data['main']['temp'])
                feels_like = round(data['main']['feels_like'])
                humidity = data['main']['humidity']
                description = data['weather'][0]['description']
                wind_speed = data['wind']['speed']
                pressure = data['main']['pressure']
                
                # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–∑ –æ—Ç–≤–µ—Ç–∞ API
                city_name = data['name']
                country = data['sys']['country']

                # –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
                lat = data['coord']['lat']
                lon = data['coord']['lon']

                weather_info = (
                    f"üåç –ü–æ–≥–æ–¥–∞ –≤ {city_name}, {country}:\n\n"
                    f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C)\n"
                    f"‚òÅÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: {description.capitalize()}\n"
                    f"üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å\n"
                    f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
                    f"üîΩ –î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –≥–ü–∞\n"
                    f"üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {lat:.2f}, {lon:.2f}"
                )
                return weather_info
            elif response.status_code == 404:
                return f"‚ùå –ì–æ—Ä–æ–¥ '{location}' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç '–°—Ç—Ä–∞–Ω–∞, –ì–æ—Ä–æ–¥'."
            else:
                return f"‚ùå –û—à–∏–±–∫–∞ API OpenWeather (–∫–æ–¥ {response.status_code}). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç API –∫–ª—é—á–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
            return f"‚ö†Ô∏è –î–µ–º–æ-—Ä–µ–∂–∏–º –¥–ª—è {location}:\nüå§Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: 15¬∞C\nüí® –í–µ—Ç–µ—Ä: 5 –º/—Å\nüíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: 60%\n\nüìù –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–π –ø–æ–≥–æ–¥—ã –¥–æ–±–∞–≤—å—Ç–µ OPENWEATHER_API_KEY –≤ —Å–µ–∫—Ä–µ—Ç—ã"
    except requests.exceptions.Timeout:
        logger.error(f"–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–≥–æ–¥—ã –¥–ª—è {location}")
        return f"‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –¥–ª—è {location}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    except requests.exceptions.RequestException as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã: {e}")
        return f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –¥–ª—è {location}"
    except KeyError as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ API: {e}")
        return f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –¥–ª—è {location}"
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã: {e}")
        return f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –¥–ª—è {location}"


def generate_password(length=12):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å."""
    import string
    characters = string.ascii_letters + string.digits + "!@#$%^&*"
    return ''.join(random.choice(characters) for _ in range(length))


def flip_coin():
    """–ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç –º–æ–Ω–µ—Ç–∫—É."""
    result = random.choice(["–û—Ä—ë–ª", "–†–µ—à–∫–∞"])
    emoji = "ü™ô" if result == "–û—Ä—ë–ª" else "üéØ"
    return f"{emoji} –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}!"


def roll_dice(sides=6):
    """–ë—Ä–æ—Å–∞–µ—Ç –∫—É–±–∏–∫."""
    result = random.randint(1, sides)
    return f"üé≤ –í—ã–ø–∞–ª–æ: {result}"


def get_random_color():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Ü–≤–µ—Ç."""
    colors = [
        "üî¥ –ö—Ä–∞—Å–Ω—ã–π", "üü† –û—Ä–∞–Ω–∂–µ–≤—ã–π", "üü° –ñ—ë–ª—Ç—ã–π", "üü¢ –ó–µ–ª—ë–Ω—ã–π", 
        "üîµ –°–∏–Ω–∏–π", "üü£ –§–∏–æ–ª–µ—Ç–æ–≤—ã–π", "üü§ –ö–æ—Ä–∏—á–Ω–µ–≤—ã–π", "‚ö´ –ß—ë—Ä–Ω—ã–π", 
        "‚ö™ –ë–µ–ª—ã–π", "ü©∑ –†–æ–∑–æ–≤—ã–π", "ü©µ –ì–æ–ª—É–±–æ–π", "üü© –°–∞–ª–∞—Ç–æ–≤—ã–π"
    ]
    return f"üé® –í–∞—à —Å–ª—É—á–∞–π–Ω—ã–π —Ü–≤–µ—Ç: {random.choice(colors)}"


def get_number_fact(number):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç –æ —á–∏—Å–ª–µ."""
    facts = {
        1: "1 - –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –Ω–∏ –ø—Ä–æ—Å—Ç—ã–º, –Ω–∏ —Å–æ—Å—Ç–∞–≤–Ω—ã–º.",
        7: "7 —Å—á–∏—Ç–∞–µ—Ç—Å—è —Å—á–∞—Å—Ç–ª–∏–≤—ã–º —á–∏—Å–ª–æ–º –≤–æ –º–Ω–æ–≥–∏—Ö –∫—É–ª—å—Ç—É—Ä–∞—Ö.",
        13: "13 —Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–µ—Å—á–∞—Å—Ç–ª–∏–≤—ã–º —á–∏—Å–ª–æ–º –≤ –∑–∞–ø–∞–¥–Ω–æ–π –∫—É–ª—å—Ç—É—Ä–µ.",
        42: "42 - '–æ—Ç–≤–µ—Ç –Ω–∞ –≥–ª–∞–≤–Ω—ã–π –≤–æ–ø—Ä–æ—Å –∂–∏–∑–Ω–∏, –≤—Å–µ–ª–µ–Ω–Ω–æ–π –∏ –≤—Å–µ–≥–æ —Ç–∞–∫–æ–≥–æ' –ø–æ –î—É–≥–ª–∞—Å—É –ê–¥–∞–º—Å—É.",
        100: "100 - —ç—Ç–æ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç (10¬≤).",
        365: "365 –¥–Ω–µ–π –≤ –æ–±—ã—á–Ω–æ–º –≥–æ–¥—É.",
        1000: "1000 - —ç—Ç–æ –∫—É–± —á–∏—Å–ª–∞ 10."
    }
    
    if number in facts:
        return f"üî¢ {facts[number]}"
    elif number % 2 == 0:
        return f"üî¢ {number} - —á—ë—Ç–Ω–æ–µ —á–∏—Å–ª–æ."
    else:
        return f"üî¢ {number} - –Ω–µ—á—ë—Ç–Ω–æ–µ —á–∏—Å–ª–æ."


# Define a few command handlers. These usually take the two arguments update and
# context.
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
  """Send a message when the command /start is issued."""
  user = update.effective_user
  user_id = user.id

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤ –≥—Ä—É–ø–ø–µ
  if update.message.chat.type in ['group', 'supergroup']:
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã —Å –∞–Ω–µ–∫–¥–æ—Ç–æ–º
    random_joke = random.choice(jokes)
    welcome_message = (
      "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É, –∞ —Ç–∞–∫–∂–µ –º—É–¥—Ä—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –∞–Ω–µ–∫–¥–æ—Ç—ã! ü§ñ‚ú®\n\n"
      "üå§Ô∏è –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ —Ä–µ–≥–∏–æ–Ω–µ –Ω–∞–ø–∏—à–∏—Ç–µ: .–º—É–ø–æ–≥–æ–¥–∫–∞ –°—Ç—Ä–∞–Ω–∞, –ì–æ—Ä–æ–¥\n\n"
      "üòÑ –ê–Ω–µ–∫–¥–æ—Ç –¥–ª—è –ø–æ–¥–Ω—è—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è:\n\n"
      f"üòÇ {random_joke}\n\n"
      "üë• –°–æ–∑–¥–∞—Ç–µ–ª–∏:\n"
      "üé® –õ–∏–Ω–∞ (@star_linochka –¥–∏–∑–∞–π–Ω–µ—Ä)\n"
      "üíª –¢–∞—Ä—Ö—É–Ω (@debilww999 –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç)\n\n"
      "üí¨ –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è! üéâ\n"
      "–≠—Ç–æ—Ç –±–æ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω —Å –ª—é–±–æ–≤—å—é –∏ –∑–∞–±–æ—Ç–æ–π –æ –≤–∞—à–µ–º –∫–æ–º—Ñ–æ—Ä—Ç–µ! üíñ"
    )
    await update.message.reply_text(welcome_message)
  else:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Ç–æ—Ä–æ–π –ª–∏ —Ä–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–∑—ã–≤–∞–µ—Ç /start
    if user_id in user_start_history:
      # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –º—É–¥—Ä—ã–π —Å–æ–≤–µ—Ç –∏ –∞–Ω–µ–∫–¥–æ—Ç
      random_advice = random.choice(wise_advices)
      random_joke = random.choice(jokes)

      message = (
        f"‚ú® –ú—É–¥—Ä—ã–π —Å–æ–≤–µ—Ç –¥–ª—è {user.mention_html()}:\n\n"
        f"üß† {random_advice}\n\n"
        f"üòÑ –ê –≤–æ—Ç –∞–Ω–µ–∫–¥–æ—Ç –¥–ª—è –ø–æ–¥–Ω—è—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è:\n\n"
        f"üòÇ {random_joke}\n\n"
        f"üé≠ –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üåü"
      )

      await update.message.reply_html(message)
    else:
      # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
      user_start_history.add(user_id)

      welcome_message = f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.mention_html()}! üéâ –Ø –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É .–º—É–ø–æ–≥–æ–¥–∫–∞ –°—Ç—Ä–∞–Ω–∞, –ì–æ—Ä–æ–¥"

      # –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–î–æ–±–∞–≤–∏—Ç—å –≤ —á–∞—Ç"
      keyboard = [
        [InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤ —á–∞—Ç", url=f"https://t.me/{context.bot.username}?startgroup=true")]
      ]
      reply_markup = InlineKeyboardMarkup(keyboard)

      await update.message.reply_html(
          welcome_message,
          reply_markup=reply_markup,
      )


async def new_chat_member(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
  """Send welcome message when bot is added to a chat."""
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–æ—Ç –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç
  for member in update.message.new_chat_members:
    if member.id == context.bot.id:
      welcome_message = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É, –∞ —Ç–∞–∫–∂–µ –º—É–¥—Ä—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –∞–Ω–µ–∫–¥–æ—Ç—ã! ü§ñ‚ú®\n\n"
        "üå§Ô∏è –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ —Ä–µ–≥–∏–æ–Ω–µ –Ω–∞–ø–∏—à–∏—Ç–µ: .–º—É–ø–æ–≥–æ–¥–∫–∞ –°—Ç—Ä–∞–Ω–∞, –ì–æ—Ä–æ–¥\n\n"
        "üë• –°–æ–∑–¥–∞—Ç–µ–ª–∏:\n"
        "üé® –õ–∏–Ω–∞ (@star_linochka –¥–∏–∑–∞–π–Ω–µ—Ä)\n"
        "üíª –¢–∞—Ä—Ö—É–Ω (@debilww999 –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç)\n\n"
        "üí¨ –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è! üéâ"
      )
      await update.message.reply_text(welcome_message)
      break


async def help_command(update: Update,
                       context: ContextTypes.DEFAULT_TYPE) -> None:
  """Send a message when the command /help is issued."""
  help_text = (
    "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
    "üè† /start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
    "‚ùì /help - –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n\n"
    "üå§Ô∏è .–º—É–ø–æ–≥–æ–¥–∫–∞ [–≥–æ—Ä–æ–¥] - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É\n"
    "üèì .–º—É–ø–∏–Ω–≥ - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞\n"
    "üòÇ .–º—É–∞–Ω–µ–∫–¥–æ—Ç - –°–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç\n"
    "üí° .–º—É—Å–æ–≤–µ—Ç - –ú—É–¥—Ä—ã–π —Å–æ–≤–µ—Ç\n"
    "üåü .–º—É—Ü–∏—Ç–∞—Ç–∞ - –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞\n"
    "üß† .–º—É—Ñ–∞–∫—Ç - –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç\n"
    "ü§î .–º—É–∑–∞–≥–∞–¥–∫–∞ - –ó–∞–≥–∞–¥–∫–∞\n"
    "ü™ô .–º—É–æ—Ä—ë–ª - –ü–æ–¥–±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É\n"
    "üé≤ .–º—É–∫—É–±–∏–∫ [—á–∏—Å–ª–æ] - –ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫\n"
    "üîê .–º—É–ø–∞—Ä–æ–ª—å [–¥–ª–∏–Ω–∞] - –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–∞—Ä–æ–ª–µ–π\n"
    "üé® .–º—É—Ü–≤–µ—Ç - –°–ª—É—á–∞–π–Ω—ã–π —Ü–≤–µ—Ç\n"
    "üî¢ .–º—É—á–∏—Å–ª–æ [—á–∏—Å–ª–æ] - –§–∞–∫—Ç –æ —á–∏—Å–ª–µ\n"
    "‚≠ê .–æ—Ü–µ–Ω–∏—Ç—å - –û—Ü–µ–Ω–∏—Ç—å –±–æ—Ç–∞\n\n"
    "üí¨ –í –≥—Ä—É–ø–ø–∞—Ö –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è!"
  )
  await update.message.reply_text(help_text)


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
  global last_active_chat_id
  user_message = update.message.text

  # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞
  last_active_chat_id = update.message.chat_id

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç
  if not user_message:
    await update.message.reply_text("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
    return

  # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
  if log_mode_enabled:
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{user_message}' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {update.message.from_user.id}")

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–∏–Ω–≥–∞ –ü–ï–†–í–´–ú
  if user_message.startswith('.–º—É–ø–∏–Ω–≥'):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    user_id = update.message.from_user.id
    if user_id != 7312342436:
      await update.message.reply_text("‚ùå –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å —Ç–∞—Ä—Ö—É–Ω –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É")
      return
    
    # –ò–∑–º–µ—Ä—è–µ–º –≤—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ (–ø—Å–µ–≤–¥–æ-–ø–∏–Ω–≥)
    import time
    start_time = time.time()
    
    # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç —Å –±–∞–∑–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    log_status = "on" if log_mode_enabled else "off"
    quick_ping = round((time.time() - start_time) * 1000)
    
    await update.message.reply_text(f"üèì PING: {quick_ping}ms\nüîç –ü—Ä–æ–≤–µ—Ä—è—é OpenWeather...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å OpenWeather
    openweather_status, openweather_details = check_openweather_status()
    
    end_time = time.time()
    total_time = round((end_time - start_time) * 1000)  # –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
    import platform
    import psutil
    import sys
    from datetime import datetime
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
    uptime = datetime.now() - datetime.fromtimestamp(psutil.boot_time())
    memory_usage = psutil.virtual_memory().percent
    cpu_usage = psutil.cpu_percent(interval=1)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç
    ping_response = (
        f"‚úÖ –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ ({total_time}ms):\n"
        f"üèì PING: {quick_ping}ms\n"
        f"üå§Ô∏è OPENWEATHER: {openweather_status}, {openweather_details}\n"
        f"üìã Log mode: {log_status}\n"
        f"üñ•Ô∏è CPU: {cpu_usage}%\n"
        f"üíæ RAM: {memory_usage}%\n"
        f"üêç Python: {sys.version.split()[0]}\n"
        f"‚è±Ô∏è Uptime: {str(uptime).split('.')[0]}\n"
        f"üìä Active users: {len(user_start_history)}\n"
        f"üîß Platform: {platform.system()} {platform.release()}"
    )
    
    await update.message.reply_text(ping_response)
    return

  # –ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
  if user_message == '.–º—É–∞–Ω–µ–∫–¥–æ—Ç':
    joke = random.choice(jokes)
    await update.message.reply_text(f"üòÇ {joke}")
    return

  if user_message == '.–º—É—Å–æ–≤–µ—Ç':
    advice = random.choice(wise_advices)
    await update.message.reply_text(f"üí° {advice}")
    return

  if user_message == '.–º—É—Ü–∏—Ç–∞—Ç–∞':
    quote = random.choice(motivational_quotes)
    await update.message.reply_text(quote)
    return

  if user_message == '.–º—É—Ñ–∞–∫—Ç':
    fact = random.choice(interesting_facts)
    await update.message.reply_text(fact)
    return

  if user_message == '.–º—É–∑–∞–≥–∞–¥–∫–∞':
    user_id = update.message.from_user.id
    riddle = random.choice(riddles)
    user_riddles[user_id] = riddle["answer"].lower()
    await update.message.reply_text(f"{riddle['question']}\n\nüí≠ –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç!")
    return

  if user_message == '.–º—É–æ—Ä—ë–ª':
    result = flip_coin()
    await update.message.reply_text(result)
    return

  if user_message.startswith('.–º—É–∫—É–±–∏–∫'):
    parts = user_message.split()
    sides = 6
    if len(parts) > 1 and parts[1].isdigit():
      sides = int(parts[1])
      if sides < 2:
        sides = 6
      elif sides > 100:
        sides = 100
    result = roll_dice(sides)
    await update.message.reply_text(result)
    return

  if user_message.startswith('.–º—É–ø–∞—Ä–æ–ª—å'):
    parts = user_message.split()
    length = 12
    if len(parts) > 1 and parts[1].isdigit():
      length = int(parts[1])
      if length < 4:
        length = 4
      elif length > 50:
        length = 50
    password = generate_password(length)
    await update.message.reply_text(f"üîê –í–∞—à –ø–∞—Ä–æ–ª—å: `{password}`", parse_mode='Markdown')
    return

  if user_message == '.–º—É—Ü–≤–µ—Ç':
    color = get_random_color()
    await update.message.reply_text(color)
    return

  if user_message.startswith('.–º—É—á–∏—Å–ª–æ'):
    parts = user_message.split()
    if len(parts) > 1 and parts[1].isdigit():
      number = int(parts[1])
      fact = get_number_fact(number)
      await update.message.reply_text(fact)
    else:
      await update.message.reply_text("üî¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .–º—É—á–∏—Å–ª–æ [—á–∏—Å–ª–æ]\n–ù–∞–ø—Ä–∏–º–µ—Ä: .–º—É—á–∏—Å–ª–æ 42")
    return

  if user_message == '.–æ—Ü–µ–Ω–∏—Ç—å':
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ—Ü–µ–Ω–∫–∏ –æ—Ç 1 –¥–æ 6
    keyboard = [
      [
        InlineKeyboardButton("1", callback_data="rating_1"),
        InlineKeyboardButton("2", callback_data="rating_2"),
        InlineKeyboardButton("3", callback_data="rating_3")
      ],
      [
        InlineKeyboardButton("4", callback_data="rating_4"),
        InlineKeyboardButton("5", callback_data="rating_5"),
        InlineKeyboardButton("6", callback_data="rating_6")
      ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    rating_message = (
      "‚≠ê –í–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –±–æ—Ç? –ü–æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ü–µ–Ω–∫—É —ç—Ç–æ–º—É –±–æ—Ç—É!\n\n"
      "1 - —É–∂–∞—Å–Ω—ã–π\n"
      "3 - –Ω–µ –ø–ª–æ—Ö–æ\n"
      "6 - –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–π\n\n"
      "üëá –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ü–µ–Ω–∫—É:"
    )
    
    await update.message.reply_text(rating_message, reply_markup=reply_markup)
    return

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç—ã –Ω–∞ –∑–∞–≥–∞–¥–∫–∏
  user_id = update.message.from_user.id
  if user_id in user_riddles:
    correct_answer = user_riddles[user_id]
    user_answer = user_message.lower().strip()
    
    if user_answer == correct_answer:
      await update.message.reply_text("üéâ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üëè")
      del user_riddles[user_id]
      return
    elif len(user_answer) > 2:  # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π
      await update.message.reply_text(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {user_riddles[user_id].title()}")
      del user_riddles[user_id]
      return

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ–≥–æ–¥—ã
  if user_message.startswith('.–ø–æ–≥–æ–¥–∞ ') or user_message.startswith('.–º—É–ø–æ–≥–æ–¥–∫–∞ '):
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ–≥–æ–¥—ã
    if user_message.startswith('.–ø–æ–≥–æ–¥–∞ '):
      location = user_message[8:]  # –£–±–∏—Ä–∞–µ–º ".–ø–æ–≥–æ–¥–∞ "
    elif user_message.startswith('.–º—É–ø–æ–≥–æ–¥–∫–∞ '):
      location = user_message[11:]  # –£–±–∏—Ä–∞–µ–º ".–º—É–ø–æ–≥–æ–¥–∫–∞ "
    else:
      location = ""

    if not location.strip():
      await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: .–º—É–ø–æ–≥–æ–¥–∫–∞ –°—Ç—Ä–∞–Ω–∞, –ì–æ—Ä–æ–¥\n–ù–∞–ø—Ä–∏–º–µ—Ä: .–º—É–ø–æ–≥–æ–¥–∫–∞ –†–æ—Å—Å–∏—è, –ú–æ—Å–∫–≤–∞")
      return

    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é –ø–æ–≥–æ–¥—É
    weather_info = get_weather(location.strip())
    await update.message.reply_text(weather_info)
    return

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è –ª–∏ –±–æ—Ç –≤ –≥—Ä—É–ø–ø–µ
  if update.message.chat.type in ['group', 'supergroup']:
    bot_username = context.bot.username
    message_lower = user_message.lower()
    user_id = update.message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –±–æ—Ç–∞
    mention_patterns = [
        f"@{bot_username}",
        f"@{bot_username.lower()}",
        "–±–æ—Ç",
        "bot",
        "–ø—Ä–∏–≤–µ—Ç",
        "hi",
        "hello"
    ]

    # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –õ–∏–Ω—ã (ID: 7617284608)

    # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º—ã–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —á–µ—Ä–µ–∑ Telegram API
    mentioned = False
    if update.message.entities:
        for entity in update.message.entities:
            if entity.type == "mention":
                mention_text = user_message[entity.offset:entity.offset + entity.length]
                if mention_text.lower() == f"@{bot_username.lower()}":
                    mentioned = True
                    break

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
    if not mentioned:
        for pattern in mention_patterns:
            if pattern in message_lower:
                mentioned = True
                break

    if mentioned:
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –õ–∏–Ω—ã (ID: 7617284608)
        if user_id == 7617284608:
            lina_responses = [
                "–ü—Ä–∏–≤–µ—Ç–∏–∫, –õ–∏–Ω–∞! –ö–∞–∫ —É —Ç–µ–±—è –¥–µ–ª–∞? üòä",
                "–ü—Ä–∏–≤–µ—Ç, –õ–∏–Ω–æ—á–∫–∞! –ö–∞–∫ –¥–µ–ª–∞-—Ç–æ? üåü", 
                "–•–µ–π, –õ–∏–Ω–∞! –ß—Ç–æ –Ω–æ–≤–æ–≥–æ? üòÑ",
                "–°–∞–ª—é—Ç, –õ–∏–Ω–æ—á–∫–∞! –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ? üéâ",
                "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –õ–∏–Ω–∞! –ö–∞–∫ –ø–æ–∂–∏–≤–∞–µ—à—å? üëã",
                "–ü—Ä–∏–≤–µ—Ç, –õ–∏–Ω–æ—á–∫–∞! –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç? ü§î",
                "–ü—Ä–∏–≤–µ—Ç–∏–∫–∏, –õ–∏–Ω–∞! –ö–∞–∫ –∂–∏–∑–Ω—å? üåà",
                "–•–∞–π, –õ–∏–Ω–æ—á–∫–∞! –ö–∞–∫ —Å–∞–º? üòé",
                "–ü—Ä–∏–≤–µ—Ç, –õ–∏–Ω–∞! –ö–∞–∫ –¥–µ–ª–∞, –¥–æ—Ä–æ–≥–∞—è? üíï",
                "–ó–¥–æ—Ä–æ–≤–æ, –õ–∏–Ω–æ—á–∫–∞! –ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞? üöÄ",
                "–ü—Ä–∏–≤–µ—Ç, –õ–∏–Ω–∞! –ß—Ç–æ –¥–µ–ª–∞–µ—à—å? ü§ó",
                "–•—ç–π, –õ–∏–Ω–æ—á–∫–∞! –ö–∞–∫ –¥–µ–ª–∞ —É —Ç–µ–±—è? üå∏",
                "–ü—Ä–∏–≤–µ—Ç, –õ–∏–Ω–∞! –ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç –¥–µ–Ω—å? ‚òÄÔ∏è",
                "–°–∞–ª—é—Ç, –õ–∏–Ω–æ—á–∫–∞! –ö–∞–∫ –¥–µ–ª–∞, –¥—Ä—É–≥? ü§ù",
                "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –õ–∏–Ω–∞! –ö–∞–∫ –ø–æ–∂–∏–≤–∞–µ—à—å? üéä",
                "–ü—Ä–∏–≤–µ—Ç, –õ–∏–Ω–æ—á–∫–∞! –ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ –∂–∏–∑–Ω–∏? üìö",
                "–•–∞–π, –õ–∏–Ω–∞! –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è? üòÉ",
                "–ü—Ä–∏–≤–µ—Ç, –õ–∏–Ω–æ—á–∫–∞! –ö–∞–∫ –¥–µ–ª–∞, –∫—Ä–∞—Å–∞–≤–∏—Ü–∞? üí™",
                "–ó–¥–æ—Ä–æ–≤–æ, –õ–∏–Ω–∞! –ß—Ç–æ —É —Ç–µ–±—è –Ω–æ–≤–æ–≥–æ? üéØ",
                "–ü—Ä–∏–≤–µ—Ç, –õ–∏–Ω–æ—á–∫–∞! –ö–∞–∫ –ø—Ä–æ—à–µ–ª –¥–µ–Ω—å? üåÖ"
            ]
            response = random.choice(lina_responses)
        else:
            # –û—Ç–≤–µ—á–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–π —Ä–µ–ø–ª–∏–∫–æ–π –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
            response = random.choice(chat_responses)

        await update.message.reply_text(response)
        return


# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —á–∞—Ç–∞, –≥–¥–µ –±–æ—Ç –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω
last_active_chat_id = None

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Handle button callbacks for rating."""
    query = update.callback_query
    await query.answer()
    
    if query.data.startswith("rating_"):
        rating = query.data.split("_")[1]
        
        # –°–æ–∑–¥–∞–µ–º –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Ü–µ–Ω–∫–∏
        if rating == "1":
            response = "üòî –°–ø–∞—Å–∏–±–æ –∑–∞ —á–µ—Å—Ç–Ω–æ—Å—Ç—å! –ú—ã –±—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º –±–æ—Ç–∞."
        elif rating == "2":
            response = "üòê –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! –ú—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è —Å—Ç–∞—Ç—å –ª—É—á—à–µ."
        elif rating == "3":
            response = "üôÇ –°–ø–∞—Å–∏–±–æ! –†–∞–¥—ã, —á—Ç–æ –±–æ—Ç –≤–∞–º –Ω–µ –ø–ª–æ—Ö–æ –ø–æ–¥—Ö–æ–¥–∏—Ç."
        elif rating == "4":
            response = "üòä –û—Ç–ª–∏—á–Ω–æ! –°–ø–∞—Å–∏–±–æ –∑–∞ —Ö–æ—Ä–æ—à—É—é –æ—Ü–µ–Ω–∫—É!"
        elif rating == "5":
            response = "üòÑ –ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –û—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è!"
        elif rating == "6":
            response = "ü§© –ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã—Å—à—É—é –æ—Ü–µ–Ω–∫—É! –í—ã –ª—É—á—à–∏–µ!"
        else:
            response = "‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞, –Ω–æ —Å–ø–∞—Å–∏–±–æ!"
        
        response += f"\n\n‚≠ê –í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞: {rating}/6"
        
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —É–±–∏—Ä–∞—è –∫–Ω–æ–ø–∫–∏
        await query.edit_message_text(text=response)


async def send_goodbye_message(application):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ—â–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç."""
    global last_active_chat_id
    if last_active_chat_id:
        try:
            await application.bot.send_message(
                chat_id=last_active_chat_id,
                text="üåô –±–æ—Ç —Å–ø–∏—Ç!"
            )
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ—â–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

def main() -> None:
  """Start the bot."""
  # Create the Application and pass it your bot's token.
  application = Application.builder().token(my_bot_token).build()

  # on different commands - answer in Telegram
  application.add_handler(CommandHandler("start", start))
  application.add_handler(CommandHandler("help", help_command))

  # handle new chat members (when bot is added to group)
  application.add_handler(MessageHandler(filters.StatusUpdate.NEW_CHAT_MEMBERS, new_chat_member))

  # handle button callbacks
  application.add_handler(CallbackQueryHandler(button_callback))

  # on non command i.e message - handle weather or stylize text
  application.add_handler(
      MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

  # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  async def post_stop_callback(app):
      """Callback –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
      await send_goodbye_message(app)
      logger.info("üåô –±–æ—Ç —Å–ø–∏—Ç!")

  application.post_stop = post_stop_callback

  # Run the bot until the user presses Ctrl-C
  application.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == "__main__":
  main()